@using stortromme.Data
@using stortromme.Component
@inject LobbyService LobbyService

<div class="container">
    <div class="row">
        <div class="col-md-8">
            @if (presenter?.Book != null)
            {
                <h1>@(presenter.Book.Master.Name)'s book</h1>
                @foreach (var page in PresentPages())
                {
                    <h2>Page @(page.PageNumber + 1) (@(page.Author.Name))</h2>
                    <PageViewer Page=page></PageViewer>
                }
            }
            else
            {
                <p class="text-center">Waiting for a moderator to present the books.</p>
            }
        </div>
        <div class="col-md-4">
            <h3>Players (@Lobby.Players.Count)</h3>
            <div class="col-md players">
                <ul>
                    @foreach (var player in Lobby.Players)
                    {
                        <li>
                            <PlayerListItem Player=player></PlayerListItem>
                            @if (Player.IsModerator)
                            {
                                @if (presenter?.Book.Master == player)
                                {
                                    @if (presenter.Book.Pages.Count > presenter.DisplayPages)
                                    {
                                        <button class="btn btn-sm btn-primary" @onclick="PresentNextPage">Next page</button>
                                    }
                                    else if (!presenter.Flipped)
                                    {
                                        <button class="btn btn-sm btn-warning" @onclick="FlipBook">Flip book</button>
                                    }
                                }
                                else
                                {
                                    <button class="btn btn-sm btn-outline-primary" @onclick="() => PresentBook(player)">Present book</button>
                                }
                            }
                        </li>
                    }
                </ul>
            </div>
            
            @if (Player.IsModerator)
            {
                <div class="form-group">
                    <button @onclick="ReturnToLobby" class="btn btn-primary">Return to Lobby</button>
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public Player Player { get; set; }

    [Parameter]
    public Lobby Lobby { get; set; }
     
    private Game game => Lobby.Game;
    private Presenter presenter => Lobby.Presenter;

    private IEnumerable<Page> PresentPages() {
        var pages = presenter.Book.Pages.Take(presenter.DisplayPages);
        if (!presenter.Flipped)
        {
            pages = pages.Reverse();
        }

        return pages;
    }

    public void LeaveLobby()
    {
        LobbyService.LeaveLobby(Player, Lobby);
    }

    public void ReturnToLobby()
    {
        Lobby.Game = null;
        Lobby.LobbyUpdated();
    }

    public void PresentBook(Player player)
    {
        Lobby.Presenter = new Presenter(game.Books.First(b => b.Master == player));
        Lobby.LobbyUpdated();
    }

    public void PresentNextPage()
    {
        presenter.DisplayPages++;
        Lobby.LobbyUpdated();
    }

    public void FlipBook()
    {
        presenter.Flipped = true;
        Lobby.LobbyUpdated();
    }
}